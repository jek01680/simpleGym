/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.gym.view;

import com.gym.Zipcode.model.ZipcodeDAO;
import com.gym.Zipcode.model.ZipcodeDTO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author STU-13
 */
public class Subzipcode extends javax.swing.JFrame implements ActionListener{
    EditFrame eMf;
    MemberFrame Mf;
    AdminMemberFrame AMf;
    private int flag;
    private static final int ADMIN=1;
    private static final int USER=2;
    private static final int USER_E=3;
    ZipcodeDAO dao = new ZipcodeDAO();
    private String[] colNames={"우편번호","시도","구군","동","번지"};
    private DefaultTableModel model = new DefaultTableModel();
    /**
     * Creates new form Subzipcode
     */
    public Subzipcode() {
        initComponents();
        
        init();
        addEvent();
    }
    public Subzipcode(EditFrame eMf){
        this();
        
        this.eMf=eMf;
        flag=USER;
    }
    public Subzipcode(MemberFrame Mf){
        this();
        
        this.Mf=Mf;
        flag=USER;
    }
    public Subzipcode(AdminMemberFrame AMf){
        this();
        
        this.AMf=AMf;
        flag=ADMIN;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tfDong = new javax.swing.JTextField();
        btSearch = new javax.swing.JButton();
        btClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "우편번호", "시도", "구군", "동", "번지"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table3);

        jLabel1.setText("지역명(읍면동): ");

        btSearch.setText("검색");

        btClose.setText("닫기");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDong, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btClose)
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfDong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSearch)
                    .addComponent(btClose))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Subzipcode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Subzipcode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Subzipcode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Subzipcode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Subzipcode().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btClose;
    private javax.swing.JButton btSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table3;
    private javax.swing.JTextField tfDong;
    // End of variables declaration//GEN-END:variables

    private void init() {
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    private void addEvent() {
        btSearch.addActionListener(this);
        table3.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int row = table3.getSelectedRow();
                String zipcode = (String)table3.getValueAt(row, 0);
                
                String address = "";
                for(int i=1; i<4; i++){
                    String addr = (String) table3.getValueAt(row,i);
                    address += addr+" ";
                }//for
                if(flag==USER){
                    Mf.tfZipcode.setText(zipcode);
                    Mf.tfAddress1.setText(address);
                }else if(flag==ADMIN){
                    AMf.tfZipcode.setText(zipcode);
                    AMf.tfAddress1.setText(address);
                }else if(flag==USER_E){
                    eMf.tfZipcode.setText(zipcode);
                    eMf.tfAddress1.setText(address);
                }
                dispose();
            }
        });
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==btSearch){
            try {
                search();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }

    private void search() throws SQLException {
        //1
        String dong = tfDong.getText();
        if(dong==null || dong.isEmpty()){
            JOptionPane.showMessageDialog(this, "지역을 입력해주세요");
            tfDong.requestFocus();
            return;
        }
        
        //2
        ArrayList<ZipcodeDTO> list = dao.searchDong(dong);
        
        if(list==null || list.isEmpty()){
            JOptionPane.showMessageDialog(this, "해당 주소가 없습니다.");
            tfDong.requestFocus();
            return;
        }
        //3
        String[][] data = new String[list.size()][colNames.length];
        
        for(int i=0; i<list.size(); i++){
            ZipcodeDTO dto = list.get(i);
            
            data[i][0] = dto.getZipcode();
            data[i][1] = dto.getSido();
            data[i][2] = dto.getGugun();
            data[i][3] = dto.getDong();
            
             String bunji = dto.getStartbunji();
            String endBunji = dto.getEndbunji();
            if(endBunji!=null && !endBunji.isEmpty()){
                //bunji = bunji +" ~ "+endBunji;
                bunji += " ~ " + endBunji;
            }
            data[i][4] = bunji;
        }
        model.setDataVector(data, colNames);
        table3.setModel(model);
    }


}
